continue
continue\
continue
continuecontinue
continue
cocontinue
params
paraparas
continue
params[:blockchain][:hash]
blockchain_params
exit
params[:blockchain]
blockchain_params
continue
exit
params
params[:blockchain][:hash]
blockchain_params
@blockchain
exit
@blockchain
exit
Blockchain.all
blockchain
continue
conitnue
exit
@blockchain
blockchain
continue
blockchain
continue
exit
@blockchain.save
@blockchain = Blockchain.new(blockchain_params)
@blockchain = Blockchain.save(blockchain_params)
@blockchain
@blockchain = Blockchain.create(blockchain_params)
is out of range for ActiveModel::Type::Integer with limit 4 bytes):
continue
exit
Blockchain.create(hash: 'keymar')
Blockchain.create(blockchain_params)
params
continue
params
exit
@blockchain.save
@blockchain = Blockchain.new(blockchain_params)
params
exit
s.methods
Blockchain.create(hash: s.)
Blockchain.create(hash: d)
s = params[:blockchain][:hash]
params[:blockchain][:hash]
Blockchain.create(hash: [params[:blockchain][:hash]])
Blockchain.create(hash: params[:blockchain][:hash].to_s)
Blockchain.create(hash: params[:blockchain][:hash].to_i)
Blockchain.create(hash: params[:blockchain][:hash])
params[:blockchain][:ver]
params[:blockchain][:hash]
params[:blockchain]
params[:blockchains]
blockchain_params
blockchains_params
continue
exit
@blockchain.save
exit
params[:blockchain][:hash].to_i
params[:blockchain][:hash]
params[:blockchain]
blockchain_params
exit
blockchain_params
params
@blockchain.save
continue
Blockchain.last
@blockchain.save
@blockchain = Blockchain.new(blockchain_params)
exit
@blockchain.methods
@blockchain.errors
blockchain_params
params
@blockchain.save
@blockchain = Blockchain.new(blockchain_params)
exit
@blockchain.save
@blockchain = Blockchain.new(blockchain_params)
exit
@blockchain.errors
@blockchain.save
@blockchain.errors
@blockchain = Blockchain.new(blockchain_params)
exit
@blockchain.save
@blockchain.errors
@blockchain
Blockchain
Blockchain.all
@blockchain
@blockchain.errors
@blockchain.save
@blockchain.errors
@blockchain = Blockchain.new(blockchain_params)
@blockchain.errors
@blockchain = Blockchain.create(blockchain_params)
beforeSend(xhr, options) {
        xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8')
        // Workaround: add options.data late to avoid Content-Type header to already being set in stone
        // https://github.com/rails/rails/blob/master/actionview/app/assets/javascripts/rails-ujs/utils/ajax.coffee#L53
        options.data = JSON.stringify(data)
        return true
      },
exit
blockchain_params
params
exit
blockchain_params
params
exit
params
exit
params
